# -*- coding: utf-8 -*-
"""Data_Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MfztkG3FShSN-3uO7wqlQkuBL8IS2mhZ
"""

import numpy as np
import seaborn as sns
from matplotlib import pyplot as plt
import pandas as pd

df = pd.read_csv(r'C:\Users\HyunGeun\Desktop\학교\2021 1학기\데이터마이닝\팀프로젝트\최종발표\result.csv')
df.columns = ['title', 'subscribers','videoCount','duration','categoryId','view_count','likes','dislikes','comment_count',
              'thumbnail_link','tag_num','description1','trend','sentiment1','temperature','TE1','TE2','TE3','TE4','TE5','TE6','TE7',
              'TE8','TE9','TE10']
df.head().T

type(df)
df.shape
df.describe().T

df['thumbnail_link']=df['thumbnail_link'].astype('category')
df['description1']=df['description1'].astype('category')
df['trend']=df['trend'].astype('category')
df['sentiment1']=df['sentiment1'].astype('category')
df.info()

corr=df.corr()
plt.figure(figsize=(20,16))
sns.heatmap(corr,annot=True)

mask = np.zeros_like(corr)
mask[np.triu_indices_from(mask)] = True
with sns.axes_style("white"):
    f, ax = plt.subplots(figsize=(20, 16))
    ax = sns.heatmap(corr, mask=mask, vmax=.3, annot=True, cmap='YlGnBu', square=True)

plt.figure(figsize=(20,15))
boxplot = df.boxplot(column=['TE1','TE2','TE3','TE4','TE5','TE6','TE7','TE8','TE9','TE10'])
plt.show()

plt.figure(figsize=(20,15))
boxplot = df.boxplot(column=['subscribers','videoCount','duration','categoryId','view_count',
                             'likes','dislikes','comment_count','tag_num','temperature'])
plt.show()

df2=df.drop(['view_count','dislikes','comment_count'],axis='columns')
df2.info()

file_path="./result2.scv"
type(df2)

df2 = pd.DataFrame(df2).to_csv('result2.csv')

df = df.drop(['temperature'],axis='columns')

df.hist(bins=20, figsize=(20,20))

df_trend = df[df['trend']==1]
df_nottrend = df[df['trend']==0]
df_trend

df_trend = df_trend.drop(['temperature'],axis='columns')
df_trend.hist(bins=20, figsize=(20,20))

df_nottrend = df_nottrend.drop(['temperature'],axis='columns')
df_nottrend.hist(bins=20, figsize=(20,20))

sns.countplot(x="thumbnail_link", data=df)

sns.countplot(x="thumbnail_link", data=df_trend)

sns.countplot(x="thumbnail_link", data=df_nottrend)

sns.countplot(x ="description1", data = df)